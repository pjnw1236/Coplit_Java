package com.codestates.coplit; 
import java.util.*;

public class Solution {  
	public boolean and(boolean[] arr){
	
	// arr 배열의 크기가 0이면 true 반환
    	if (arr.length == 0) { return true; }

 	// arr[0]가 true이면, 재귀적으로 수행하여 arr[1] ~ arr[arr.length]가 true인지 확인
	// 중간에 false가 있으면 false 반환
    	if (Boolean.TRUE.equals(arr[0])) { 
      		return and(Arrays.copyOfRange(arr, 1, arr.length)); 
    	} else { return false; }
    
	} 
}

////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

//    [방법 2]
//    if(arr.length == 0) return true;
//    boolean head = arr[0];
//    boolean tail = and(Arrays.copyOfRange(arr, 1, arr.length));
//
//    if(!head || !tail) return false;
//    return true;
